1. В Core/... лежат классы для работы со звуком.
Основной класс здесь - WaveState - обёртка над wav-ом, позволяющая делать некоторые операции.
Остальные классы выполняют вспомогательные функции.
Стоит также отметить класс SoundCompressor, в котором содержится логика усреднения громкости фрагментов трека.

2. Во View/... находятся основные классы для отображения пользователю.
Класс Channel отвечает за отрисовку звукового канала.
Класс ChannelsList содержит в себе набор каналов и рисует их друг под другом.
Класс Track содержит в себе ChannelsList а также панель с возможными операциями над дорожкой.
Класс TimePanel отвечает за отрисовку панели времени, которая прикреплена к каналу.
Класс ActionsPanel - панель действий над каналом.
Класс EffectsDialog - диалоговое окно для выбора эффекта и его параметров.
Класс Window содержит в себе список дорожек.

3. ViewModel/... - модель того что видит пользователь.
Парные классы к классам из View соответственно являются моделями этих классов и содержат в себе всё необходимое для корректной отрисовки.
Например, класс TrackModel содержит саму дорожку(WaveState), список моделей для каждого канала дорожки, информацию о выделенной на данный момент части дорожки, информацию о видимой пользователю части дорожки, ссылку на модель всего окна и поле is_active, необходимое для суммирования дорожек.
Аналогично, другие подобные классы содержат различную информацию о текущем состоянии.

4. ViewModel.Utils/... содержит классы, используемые для удобной работы с текущим состоянием.
Например, класс CapturedAreaContainer - класс, содержащий информацию о выделенной области трека.
Класс PowOfTwoChannelCompressor содержит логику выбора точек трека для отрисовки(рисуются не все точки для улучшения производительности)
Класс FramesGridUtils содержит логику "увеличения/уменьшения в 2 раза", которая используется в PowOfTwoChannelCompressor-е и в TimePanel-е.
Эта логика позволяет изменять множество рисуемых точек при изменении масштаба.

5. ConsoleSoundEditor/ConsoleModel - модель консольного представления.
Этот класс предоставляет необходимое api и правильно обрабатывает ошибки, возвращая читабельные ответы.
ConsoleSoundEditor/ConsoleExecutor содержит логику парсинга команд и вызова нужных методов из ConsoleModel